{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-05-28T19:24:43.073Z",
    "end": "2024-05-28T19:24:57.471Z",
    "duration": 14398,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "05b978c7-a11b-43cf-b5ca-fbea26ee0e28",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\TestFramework-1.js",
      "file": "cypress\\integration\\examples\\TestFramework-1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68d45196-29e2-4ae4-bbb0-a2a8f02ab7f7",
          "title": "Framework-1 test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Framework-1 test case:",
              "fullTitle": "Framework-1 test suite Framework-1 test case:",
              "timedOut": null,
              "duration": 11549,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\integration\\\\examples\\\\TestFramework-1.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\TestFramework-1.js\\\\Framework-1 test suite -- Framework-1 test case (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "Cypress.config('defaultCommandTimeout', 8000); // defining wait time only for this test case\nconst homePage = new _HomePage.default();\nconst productPage = new _ProductPage.default();\ncy.visit(Cypress.env('BaseUrl') + \"/angularpractice/\");\nhomePage.getEditBox().type(this.data.name); //putting the name in the first text box\nhomePage.getGender().select(this.data.gender); //selecting the gender from the dropdown list\n///Assertions\nhomePage.getTwoWayDataBinding().should('have.value', this.data.name); // Checking the name is same or not in the two text boxes\nhomePage.getEditBox().should('have.attr', 'minlength', '2'); // Checking whether the required minimum character length is 2 or not\nhomePage.getEntrepreneaur().should('be.disabled'); // Checking the radio button is disabled or not\n//cy.pause()\nhomePage.getShopTab().click(); //navigating to product list by clicking 'Shop' button\nCypress.config('defaultCommandTimeout', 8000); // defining wait time only for this test case\nthis.data.productName.forEach(function (element)\n//iterating each phone from the array/list\n{\n  cy.SelectProduct(element); //calling the custom method SelectProduct everytime\n});\nproductPage.checkOut().click(); // clicking on the checkout button [Top Right]\n///Subototal/Total off all prices -Starts\nvar subTotal = 0;\ncy.get('tr td:nth-child(4) strong').each(($el, index, $list) => {\n  const totalPrice = $el.text();\n  var result = totalPrice.split(\" \");\n  result = result[1].trim();\n  subTotal = Number(subTotal) + Number(result);\n}).then(function () {\n  cy.log(subTotal);\n});\n///Subototal/Total off all prices -Ends\ncy.get('h3 strong').each((element, index, $list) => {\n  const actualTotal = element.text();\n  var result1 = actualTotal.split(\" \");\n  var displayedTotal = result1[1].trim();\n  expect(Number(displayedTotal)).to.equal(subTotal);\n});\ncy.contains(\"Checkout\").click(); // clicking on the checkout button [To proceed checkout]\ncy.get(\"#country\").type('India'); //Typing the country name (Bangladesh)\ncy.get('.suggestions > ul > li > a').should('be.visible').click(); //click the searched country (Bangladesh)\ncy.get('#checkbox2').click({\n  force: true\n}); // Clicking on the checkbox\ncy.get(\"input[type='submit']\").click(); //clicking on purchase button\n///Assertions\ncy.get('.alert').then(function (element) {\n  const actualText = element.text();\n  expect(actualText.includes(\"ABuccess\")).to.be.true;\n});",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.eval (webpack://cypressautomation/./cypress/integration/examples/TestFramework-1.js:100:54)",
                "diff": null
              },
              "uuid": "44b40805-03ae-49b0-969b-098aff7f4cad",
              "parentUUID": "68d45196-29e2-4ae4-bbb0-a2a8f02ab7f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "44b40805-03ae-49b0-969b-098aff7f4cad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11549,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}